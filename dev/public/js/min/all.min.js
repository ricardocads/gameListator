var gameListator = angular.module('gameListator', ['ngMaterial', 'ngAnimate', 'ngMessages', 'ngAria', 'ui.router', 'firebase']);

(function(app) {
    app.config(['$stateProvider', '$urlRouterProvider', function($stateProvider, $urlRouterProvider) {

        $urlRouterProvider.otherwise('/');

        $stateProvider.state('edit/:id', {
        url: '/edit/',
        templateUrl: 'partials/edit-partial.html',
        controller: 'editController'
    })

    .state('list', {
            url: '/',
            templateUrl: 'partials/list-partial.html',
            controller: 'ListController'
        })

        .state('about', {
            url: '/about',
            templateUrl: 'partials/about-partial.html',
            controller: 'AboutController'
        });
    }]);

})(gameListator);
(function(app) {
	app.controller('AboutController', ['$scope', function($scope) {
		$scope.game = {
			id : '',
			img : '',
			title: '',
			console: '',
			year: '',
			completed: '',
			dateCompletion: new Date(),
			notes: ""
		};
		$scope.statesCompleted = ('Yes/No').split('/').map(function(state) {
				return {option: state};
			});

		$scope.consoles = ('Mega Drive/Nintendo Switch/Nintendo 64/Playstation 1/Playstation 2/' +
			'Playstation 3/Playstation 4/Super Nintendo/Xbox 360/'+
			'Xbox One').split('/').map(function(console) {
				return {name: console};
			});

			$scope.submit = function() {

				var gameData = {
					id : '',
					img : '',
					title: $scope.game.title,
					console: $scope.game.console,
					year: $scope.game.year,
					completed: $scope.game.completed,
					dateCompletion: ($scope.game.dateCompletion.getMonth() + 1) + '/' + $scope.game.dateCompletion.getDate() + '/' +  $scope.game.dateCompletion.getFullYear(),
					notes: $scope.game.notes
				};

				if (gameData.completed == "No") gameData.dateCompletion = '';

				// console.log(gameData.completed);
				// console.log(gameData.dateCompletion.getMonth());


				var newGameKey = firebase.database().ref().child('games').push().key;

				gameData.id = newGameKey;

				var updates = {};
				updates['/games/' + newGameKey] = gameData;
				// if ($scope.text) {
				// 	$scope.list.push(this.text);
				// 	$scope.text = '';
				// }
				

				firebase.database().ref().update(updates);
				window.location = "http://localhost:3000/#!/";
			};

		}]);
app.config(function($compileProvider) {
	$compileProvider.preAssignBindingsEnabled(true);
});
})(gameListator);


(function(app) {
	app.controller('editController', ['$scope', function($scope) {

	}]);
})(gameListator);

(function(app) {
	app.controller('ListController', ['$scope', function($scope) {
	//----------VISUAL SEARCH BAR-------------

	var vm = this;

	var header = document.querySelector(".header");
	var input = document.querySelector(".search-box-input");
	var close = document.querySelector(".delete");

	function hideHeader() {
		header.classList.remove('show');
		header.classList.add('hide');
	};
	function showHeader() {
		if (input.value === '') {
			header.classList.remove('hide');
			header.classList.add('show');
		}
	};
	function showHeaderOnClose() {
		header.classList.remove('hide');
		header.classList.add('show');
	};

	input.addEventListener("focus", hideHeader);
	input.addEventListener("blur", showHeader);
	close.addEventListener("click", showHeaderOnClose);

	//----------VISUAL SEARCH BAR-------------

	//----------ENGINE SEARCH BAR-------------

	// $scope.searchWord = '';

	// $scope.filterGame = function(word,item) {

	// 	console.log(item);

	// 	 return function() {
	// 	 	if ( word == undefined || word.length == 0 || item.title == word ) return true;
 //         }
	// }

	//----------ENGINE SEARCH BAR-------------

	//------------LISTING GAMES---------------

	$scope.todos = [];
	var arraytempReverse = [];
	firebase.database().ref('/games/').orderByChild('dateCompletion').once('value').then(function(snapshot) {
		snapshot.forEach(function(gameSnapshot) {
			var game = gameSnapshot.val();
			var temp = {
				id : game.id,
				img : game.img,
				title: game.title,
				console: game.console,
				year: game.year,
				yearsold: ((new Date()).getFullYear() - game.year),
				completed: game.completed,
				dateCompletion: game.dateCompletion,
				notes: game.notes
			};
       		arraytempReverse.unshift(temp);
		});
	});
	$scope.todos = arraytempReverse;

	//------------LISTING GAMES---------------

	//-------------LIST ACTIONS---------------

	$scope.removeGame = function(name) {
		console.log('entrou');
		firebase.database().ref('/games/').child(name).remove();
		window.location.reload()
	}	

	//-------------LIST ACTIONS---------------
}]);


})(gameListator);